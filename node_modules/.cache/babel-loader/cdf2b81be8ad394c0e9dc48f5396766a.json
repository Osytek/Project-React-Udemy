{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Osyte\\\\Desktop\\\\React1\\\\src\\\\components\\\\Expenses\\\\ExpenseBlock.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpenseBlock.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseBlock = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  console.log(props, \"props\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpanses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpanses.length) return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onFilterChange: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), filteredExpanses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expenses found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : filteredExpanses.map(items => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: items.title,\n      amount: items.amount,\n      date: items.date\n    }, items.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseBlock, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = ExpenseBlock;\nexport default ExpenseBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseBlock\");","map":{"version":3,"sources":["C:/Users/Osyte/Desktop/React1/src/components/Expenses/ExpenseBlock.js"],"names":["ExpenseItem","Card","ExpensesFilter","useState","ExpenseBlock","props","filteredYear","setFilteredYear","console","log","filterChangeHandler","selectedYear","filteredExpanses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmB,OAAnB;;AAEA,QAAMK,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CJ,IAAAA,eAAe,CAACI,YAAD,CAAf;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACvD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,YAAjD;AACD,GAFwB,CAAzB;;AAGA,QAAMa,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB;;AACA,MAAIP,gBAAgB,CAACQ,MAArB,EACA,oBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEd,YADZ;AAEE,MAAA,cAAc,EAAEI;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGE,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAGCR,gBAAgB,CAACS,GAAjB,CAAsBR,KAAD,iBACnB,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,KAAK,CAACS,KAFf;AAGE,MAAA,MAAM,EAAET,KAAK,CAACU,MAHhB;AAIE,MAAA,IAAI,EAAEV,KAAK,CAACG;AAJd,OACOH,KAAK,CAACW,EADb;AAAA;AAAA;AAAA;AAAA,YADF,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAhCD;;GAAMpB,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseBlock.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseBlock = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  console.log(props, \"props\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpanses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  const expensesContent = <p>No expenses Found</p>;\r\n  if (filteredExpanses.length )\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onFilterChange={filterChangeHandler}\r\n      />\r\n      {filteredExpanses.length === 0 ? (\r\n        <p>No expenses found.</p>\r\n      ) : (\r\n        filteredExpanses.map((items) => (\r\n          <ExpenseItem\r\n            key={items.id}\r\n            title={items.title}\r\n            amount={items.amount}\r\n            date={items.date}\r\n          />\r\n        ))\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseBlock;\r\n"]},"metadata":{},"sourceType":"module"}